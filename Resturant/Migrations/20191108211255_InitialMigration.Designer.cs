// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Resturant.Models;

namespace Resturant.Migrations
{
    [DbContext(typeof(I4DAB_HandIn2Context))]
    [Migration("20191108211255_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Resturant.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dish_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<double>("Price")
                        .HasColumnName("price");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("DishId");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("Resturant.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("guest_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FkPersonId")
                        .HasColumnName("fk_person_id");

                    b.Property<DateTime>("Reservation")
                        .HasColumnName("reservation")
                        .HasColumnType("datetime");

                    b.Property<int?>("ReviewId")
                        .HasColumnName("review_id");

                    b.Property<int>("TableId")
                        .HasColumnName("table_id");

                    b.HasKey("GuestId");

                    b.HasIndex("FkPersonId")
                        .IsUnique()
                        .HasName("UQ__Guest__FE913B9F59961040")
                        .HasFilter("[fk_person_id] IS NOT NULL");

                    b.HasIndex("ReviewId");

                    b.HasIndex("TableId");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("Resturant.Models.GuestDish", b =>
                {
                    b.Property<int>("GuestId")
                        .HasColumnName("guest_id");

                    b.Property<int>("DishId")
                        .HasColumnName("dish_id");

                    b.HasKey("GuestId", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("GuestDish");
                });

            modelBuilder.Entity("Resturant.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("person_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Age")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("PersonId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Resturant.Models.Restaurant", b =>
                {
                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Address");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("Resturant.Models.RestaurantDish", b =>
                {
                    b.Property<string>("Addresse")
                        .HasColumnName("addresse")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("DishId")
                        .HasColumnName("dish_id");

                    b.HasKey("Addresse", "DishId");

                    b.HasIndex("DishId");

                    b.ToTable("RestaurantDish");
                });

            modelBuilder.Entity("Resturant.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("review_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasColumnName("addresse")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("DishId")
                        .HasColumnName("dish_id");

                    b.Property<int?>("Stars")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stars")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnName("text")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("ReviewId");

                    b.HasIndex("Addresse");

                    b.HasIndex("DishId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Resturant.Models.TableIns", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("table_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Addresse")
                        .IsRequired()
                        .HasColumnName("addresse")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Number")
                        .HasColumnName("number");

                    b.HasKey("TableId");

                    b.HasIndex("Addresse");

                    b.ToTable("TableIns");
                });

            modelBuilder.Entity("Resturant.Models.Waiter", b =>
                {
                    b.Property<int>("WaiterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("waiter_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PersonId")
                        .HasColumnName("person_id");

                    b.Property<int?>("Salary")
                        .HasColumnName("salary");

                    b.HasKey("WaiterId");

                    b.HasIndex("PersonId")
                        .IsUnique()
                        .HasName("UQ__Waiter__543848DEE859A2AF")
                        .HasFilter("[person_id] IS NOT NULL");

                    b.ToTable("Waiter");
                });

            modelBuilder.Entity("Resturant.Models.WaiterTableIns", b =>
                {
                    b.Property<int>("WaiterId")
                        .HasColumnName("waiter_id");

                    b.Property<int>("TableId")
                        .HasColumnName("Table_id");

                    b.HasKey("WaiterId", "TableId");

                    b.HasIndex("TableId");

                    b.ToTable("WaiterTableIns");
                });

            modelBuilder.Entity("Resturant.Models.Guest", b =>
                {
                    b.HasOne("Resturant.Models.Person", "FkPerson")
                        .WithOne("Guest")
                        .HasForeignKey("Resturant.Models.Guest", "FkPersonId")
                        .HasConstraintName("FK__Guest__fk_person__4EC8A2F6");

                    b.HasOne("Resturant.Models.Review", "Review")
                        .WithMany("Guest")
                        .HasForeignKey("ReviewId")
                        .HasConstraintName("FK__Guest__review_id__4CE05A84");

                    b.HasOne("Resturant.Models.TableIns", "Table")
                        .WithMany("Guest")
                        .HasForeignKey("TableId")
                        .HasConstraintName("FK__Guest__table_id__4DD47EBD");
                });

            modelBuilder.Entity("Resturant.Models.GuestDish", b =>
                {
                    b.HasOne("Resturant.Models.Dish", "Dish")
                        .WithMany("GuestDish")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK__GuestDish__dish___529933DA");

                    b.HasOne("Resturant.Models.Guest", "Guest")
                        .WithMany("GuestDish")
                        .HasForeignKey("GuestId")
                        .HasConstraintName("FK__GuestDish__guest__51A50FA1");
                });

            modelBuilder.Entity("Resturant.Models.RestaurantDish", b =>
                {
                    b.HasOne("Resturant.Models.Restaurant", "AddresseNavigation")
                        .WithMany("RestaurantDish")
                        .HasForeignKey("Addresse")
                        .HasConstraintName("FK__Restauran__addre__5575A085");

                    b.HasOne("Resturant.Models.Dish", "Dish")
                        .WithMany("RestaurantDish")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK__Restauran__dish___5669C4BE");
                });

            modelBuilder.Entity("Resturant.Models.Review", b =>
                {
                    b.HasOne("Resturant.Models.Restaurant", "AddresseNavigation")
                        .WithMany("Review")
                        .HasForeignKey("Addresse")
                        .HasConstraintName("FK__Review__addresse__3BB5CE82");

                    b.HasOne("Resturant.Models.Dish", "Dish")
                        .WithMany("Review")
                        .HasForeignKey("DishId")
                        .HasConstraintName("FK__Review__dish_id__3CA9F2BB");
                });

            modelBuilder.Entity("Resturant.Models.TableIns", b =>
                {
                    b.HasOne("Resturant.Models.Restaurant", "AddresseNavigation")
                        .WithMany("TableIns")
                        .HasForeignKey("Addresse")
                        .HasConstraintName("FK__TableIns__addres__3F865F66");
                });

            modelBuilder.Entity("Resturant.Models.Waiter", b =>
                {
                    b.HasOne("Resturant.Models.Person", "Person")
                        .WithOne("Waiter")
                        .HasForeignKey("Resturant.Models.Waiter", "PersonId")
                        .HasConstraintName("FK__Waiter__person_i__453F38BC");
                });

            modelBuilder.Entity("Resturant.Models.WaiterTableIns", b =>
                {
                    b.HasOne("Resturant.Models.TableIns", "Table")
                        .WithMany("WaiterTableIns")
                        .HasForeignKey("TableId")
                        .HasConstraintName("FK__WaiterTab__Table__490FC9A0");

                    b.HasOne("Resturant.Models.Waiter", "Waiter")
                        .WithMany("WaiterTableIns")
                        .HasForeignKey("WaiterId")
                        .HasConstraintName("FK__WaiterTab__waite__481BA567");
                });
#pragma warning restore 612, 618
        }
    }
}
